package sort;

import java.util.Arrays;

/**
 * Description: 快速排序
 *
 * @author Baltan
 * @date 2019-02-13 10:08
 */
public class QuickSort {
    public static void main(String[] args) {
        int[] arr =
                {49, 38, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 5, 4, 62, 99, 98, 54, 56, 17, 18, 23, 34, 15,
                        35, 25, 53, 51};
        quickSort(arr, 0, arr.length - 1);
        System.out.println(Arrays.toString(arr));
    }

    public static void quickSort(int[] arr, int firstIndex, int lastIndex) {
        /**
         * 递归条件：当开始索引小于结束索引时，否则说明两个索引重合，即只有一个数字无需再排序
         */
        if (firstIndex < lastIndex) {
            /**
             * 维护两个指针，头指针初始位置为数组开始索引的位置，尾指针初始位置为数组结束索引的位置。
             * 取待排序数组的第一个数字作为基准数。
             *
             * 如果头指针索引等于尾指针索引，说明只有一个数字，无需进行排序，
             * 如果头指针索引小于尾指针索引，说明有多个数字待排序，开始循环。
             *
             * 先循环操作尾指针，如果尾指针的位置在头指针后面并且尾指针指向的数字不小于基准数，
             * 就将尾指针向前移动一个位置，继续循环操作。否则说明尾指针指向的数字小于基准数或者尾指针与头指针重合，
             * 此时，将尾指针指向的数字替换头指针指向的数字。
             *
             * 再循环操作头指针，如果尾指针的位置在头指针后面并且头指针指向的数字不大于基准数，
             * 就将头指针向后移动一个位置，继续循环操作。否则说明头指针指向的数字大于基准数或者尾指针与头指针重合，
             * 此时，将尾指针指向的数字替换尾指针指向的数字。
             *
             * 如此循环，直到头指针和尾指针重合。将基准数替换当前指针（此时，头指针和尾指针已重合）指向的数字。
             *
             * 49, 38, 65, 97, 76, 13       基准数：49
             * ☞                   ☞
             * 13, 38, 65, 97, 76, 13
             * ☞                   ☞
             * 13, 38, 65, 97, 76, 13
             *     ☞               ☞
             * 13, 38, 65, 97, 76, 13
             *         ☞           ☞
             * 13, 38, 65, 97, 76, 65
             *         ☞           ☞
             * 13, 38, 65, 97, 76, 65
             *         ☞       ☞
             * 13, 38, 65, 97, 76, 65
             *         ☞   ☞
             * 13, 38, 65, 97, 76, 65
             *         ☞（指针重合）
             * 13, 38, 49, 97, 76, 65
             *
             * 此时，一轮操作结束后，原数组被分成两段，指针所在位置（包含）前的数字都比基准数小，
             * 指针所在位置（不包含）后的数字都比基准数大。
             * 对两段数字继续递归操作。
             */
            int lo = firstIndex;
            int hi = lastIndex;
            int base = arr[lo];
            while (lo < hi) {
                while (arr[hi] >= base && lo < hi) {
                    hi--;
                }
                arr[lo] = arr[hi];
                while (arr[lo] <= base && lo < hi) {
                    lo++;
                }
                arr[hi] = arr[lo];
            }
            arr[hi] = base;
            quickSort(arr, firstIndex, lo);
            quickSort(arr, lo + 1, lastIndex);
        }
    }
}
